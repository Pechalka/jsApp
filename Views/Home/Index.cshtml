@{
    Layout = null;
}

<!DOCTYPE html>

@helper GetTemplate(string templateId)
{
    @Html.Action("GetTemplate", "Templates", new { templateId })
}

<html>
<head>
    <title>Index</title>
   
    @GetTemplate("_baseLayout")
    @GetTemplate("_catalogLayout")
     
    @GetTemplate("dashbord")
    @GetTemplate("templateList")
    @GetTemplate("templateEdit")
    @GetTemplate("mediaboxsetup")
    
    @GetTemplate("test")
    

    <style type="text/css">
        .active {
            background-color: red;
        }
    </style>
    <script src="@Url.Content("~/Scripts/jquery-1.8.2.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/knockout-2.1.0.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/sammy/sammy.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var app = $.sammy(function () {
            var self = this;

            self.screens = [];
            self.RegisterScreen = function (screen) {
                self.screens.push(screen);
            };

            self.content = ko.observable(null);

            self.start = function () {

                var roters = [];
                $.map(self.screens, function (screen) {
                    var action = function () {
                        $.get(screen.url, this.params.toHash(), function (responseData) {
                            if (!screen.layout) {
                                if (screen.viewModel)
                                    $.extend(responseData, new screen.viewModel(responseData, null));
                                self.content({
                                    templateName: screen.template,
                                    data: responseData
                                });
                            } else {
                                
                                var layout = screen.layout;
                                var layoutViewModel = layout.viewModel || function () { };
                                var layoutData = new layoutViewModel();

                                layout = $.extend({
                                    content: ko.observable(null),
                                    template: layout.template
                                }, layoutData);


                                if (screen.viewModel) {
                                    $.extend(responseData, new screen.viewModel(responseData, layoutData));
                                }
                                layout.content({
                                    templateName: screen.template,
                                    data: responseData
                                });

                                self.content({
                                    templateName: layout.template,
                                    data: layout
                                });
                            }
                        });

                    };
                    roters.push(['get', screen.hash, action]);
                });

                self.mapRoutes(roters);
                self.run();
            };


        });

        var Layout = function (templateName, viewModel) {
            this.template = templateName;
            this.viewModel = viewModel;
        };

        var Abe = {};
        Abe.Layouts = { };

        $(function () {
            var BaseLayout = new Layout('_baseLayout');
            var CatalogLayout = new Layout('_catalogLayout', function () {
                var self = this;
                self.catalogMenu = ko.observableArray([]);
                self.selectedItem = ko.observable('#templates');
                $.get('@Url.Action("GetMenu")', '', function (data) {
                    self.catalogMenu(data.items);
                });
            });

            app.RegisterScreen({
                url: '@Url.Action("GetMenu")',
                hash: '/?',
                layout: BaseLayout,
                template: "dashbord"
            });
            app.RegisterScreen({
                url: '@Url.Action("GetTemplatets")',
                hash: '/?#templates',
                layout: CatalogLayout,
                template: "templateList",
                viewModel: function (data, layout) {
                    var self = this;
                    layout.selectedItem('#templates');
                    self.goToEdit = function (item) {
                        location.hash = '#templates/' + item.Id;
                    };
                }
            });
            app.RegisterScreen({
                url: '@Url.Action("GetTemplate")',
                hash: '/?#templates/:id',
                layout: CatalogLayout,
                template: "templateEdit",
                viewModel: function (data, layout) {
                    layout.selectedItem('#templates');
                }
            });

            app.RegisterScreen({
                url: '@Url.Action("GettestData")',
                hash: '/?#test',
                template: "test"
            });

            app.RegisterScreen({
                url: '@Url.Action("GetMediaBoxData")',
                hash: '/?#mediaboxsetup',
                layout: CatalogLayout,
                template: "mediaboxsetup",
                viewModel: function (data, layout) {
                    layout.selectedItem('#mediaboxsetup');
                }
            });
            app.start();

            ko.applyBindings(app);
        });
    </script>
</head>
<body>
<!-- ko with : content -->
    <!-- ko template: { name: templateName, data: data } -->
    <!-- /ko -->
<!-- /ko -->
</body>
</html>
